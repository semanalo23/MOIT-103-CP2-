/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MotorPH_EmployeeAppGUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ASPIRE 7
 */
public class MotorPH_EmployeeDetails_withPay extends javax.swing.JFrame {

    /**
     * Creates new form MotorPH_EmployeeDetails_withPay
     */
    private MPH_EmployeeClassList employee;
    private MotorPHEmployeeAppver2 mainFrame;

    public MotorPH_EmployeeDetails_withPay(MPH_EmployeeClassList emp, MotorPHEmployeeAppver2 mainFrame) {
        this.employee = emp;
        this.mainFrame = mainFrame;
        initComponents();
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[]{
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        }));
        initCustomComponents();
        showEmployeeDetails();
    }

    private void initCustomComponents() {
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                computePay();
            }
        });
    }

    private void showEmployeeDetails() {
        String details = "Employee Number: " + employee.getEmployeeNumber() + "\n"
                + "Name: " + employee.getFirstName() + " " + employee.getLastName() + "\n"
                + "SSS Number: " + employee.getSssNumber() + "\n"
                + "PhilHealth: " + employee.getPhilHealth() + "\n"
                + "TIN: " + employee.getTin() + "\n"
                + "Pag-IBIG: " + employee.getPagIbig() + "\n"
                + "DOB: " + employee.getDateOfBirth() + "\n"
                + "Department: " + employee.getDepartment() + "\n"
                + "Hourly Rate: " + employee.getHourlyRate();
        jTextArea1.setText(details);
        jTextArea1.setEditable(false);
    }

    private void computePay() {
        String selectedMonth = (String) jComboBox1.getSelectedItem();
        double hourlyRate;
        try {
            hourlyRate = Double.parseDouble(employee.getHourlyRate());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid hourly rate", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // For demonstration, assume 160 working hours per month.
        double computedPay = hourlyRate * 160;
        jTextArea2.setText("Employee: " + employee.getFirstName() + " " + employee.getLastName()
                + "\nComputed Pay for " + selectedMonth + ":\n" + computedPay);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        updateRecordBtn = new javax.swing.JButton();
        deleteRecordBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(51, 0, 102));
        jButton1.setForeground(new java.awt.Color(204, 255, 255));
        jButton1.setText("Compute Pay");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Full Employee Details");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Pay Information");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        updateRecordBtn.setBackground(new java.awt.Color(51, 0, 204));
        updateRecordBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateRecordBtn.setText("Update Employee Record");
        updateRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordBtnActionPerformed(evt);
            }
        });

        deleteRecordBtn.setBackground(new java.awt.Color(204, 51, 0));
        deleteRecordBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteRecordBtn.setText("Delete Employee Record");
        deleteRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updateRecordBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteRecordBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backBtn)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateRecordBtn)
                    .addComponent(deleteRecordBtn))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(backBtn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecordBtnActionPerformed
        // TODO add your handling code here:
        new MotorPH_EmployeeUpdateForm(employee).setVisible(true);
    }//GEN-LAST:event_updateRecordBtnActionPerformed

    private void deleteRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordBtnActionPerformed
        // TODO add your handling code here:
        // Ask the user for deletion confirmation
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete this employee?",
                "Confirm Delete",
                JOptionPane.OK_CANCEL_OPTION);

        if (confirm == JOptionPane.OK_OPTION) {
            // Get the singleton instance of the database manager
            MPH_EmployeeManagerDatabase db = MPH_EmployeeManagerDatabase.getInstance();

            // Attempt to delete the employee using its unique identifier
            boolean deleted = db.deleteEmployee(employee.getEmployeeNumber());

            if (deleted) {
                // Update the CSV file with the current in-memory list
                db.writeAllEmployeesToCSV();

                // Notify the user of successful deletion
                JOptionPane.showMessageDialog(this,
                        "Employee deleted successfully.",
                        "Delete Successful",
                        JOptionPane.INFORMATION_MESSAGE);

                if (mainFrame != null) {
                    mainFrame.refreshEmployeeTable();
                }

                //Close the details form if it is no longer needed
                this.dispose();
            } else {
                // Notify the user that deletion failed.
                JOptionPane.showMessageDialog(this,
                        "Employee deletion failed.",
                        "Delete Failed",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteRecordBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        // Trigger a refresh of the employee table in the main frame.
        if (mainFrame != null) {
            mainFrame.refreshEmployeeTable();
            // Optionally, if you had hidden the main frame when opening this window,
            // ensure you show it here:
            mainFrame.setVisible(true);
        }
        // Dispose the details form.
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MotorPH_EmployeeDetails_withPay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MotorPH_EmployeeDetails_withPay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MotorPH_EmployeeDetails_withPay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MotorPH_EmployeeDetails_withPay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                // Create a dummy employee for testing purposes.
                MPH_EmployeeClassList dummyEmployee = new MPH_EmployeeClassList(
                        "10001", "Doe", "John", "44-4506057-3",
                        "820126853951", "442-605-657-000",
                        "691295330870", "1980-01-01", "CEO", "50.0"
                );
                new MotorPH_EmployeeDetails_withPay(dummyEmployee, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteRecordBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton updateRecordBtn;
    // End of variables declaration//GEN-END:variables
}
